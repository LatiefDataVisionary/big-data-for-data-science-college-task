graph LR
    %% ---- Global Style Definitions (Lebih Profesional & Modern) ----
    classDef datasource fill:#007bff,stroke:#0056b3,stroke-width:2px,color:white,font-weight:bold,border-radius:8px,padding:10px;
    classDef storage fill:#28a745,stroke:#1e7e34,stroke-width:2px,color:white,font-weight:bold,border-radius:8px,padding:10px;
    classDef processing fill:#ffc107,stroke:#cca100,stroke-width:2px,color:#212529,font-weight:bold,border-radius:8px,padding:10px;
    classDef featureEng fill:#fd7e14,stroke:#c66410,stroke-width:2px,color:white,font-weight:bold,border-radius:8px,padding:10px;
    classDef splitting fill:#6f42c1,stroke:#59359a,stroke-width:2px,color:white,font-weight:bold,border-radius:8px,padding:10px;
    classDef training fill:#d63384,stroke:#a32867,stroke-width:2px,color:white,font-weight:bold,border-radius:8px,padding:10px;
    classDef evaluation fill:#0dcaf0,stroke:#0aa3bf,stroke-width:2px,color:#212529,font-weight:bold,border-radius:8px,padding:10px;
    classDef visualization fill:#198754,stroke:#13653f,stroke-width:2px,color:white,font-weight:bold,border-radius:8px,padding:10px;
    classDef insights fill:#6610f2,stroke:#520dc2,stroke-width:2px,color:white,font-weight:bold,border-radius:8px,padding:10px;

    %% ---- Subgraph untuk Tahapan Utama (Flow Horizontal) ----

    subgraph "Phase 1: Acquisition & Storage"
        direction LR
        A["💾<br/><b>Data Source</b><br/>NYC Taxi CSV"]:::datasource
        B["📥<br/><b>Data Ingestion</b><br/>Python, Pandas"]:::processing
        C["🗄️<br/><b>Data Storage</b><br/>Local (Sim. HDFS)"]:::storage
        A --> B --> C
    end

    subgraph "Phase 2: Data Preparation"
        direction LR
        D["🧹<br/><b>Preprocessing</b><br/>Clean, Transform"]:::processing
        E["✨<br/><b>Feature Eng.</b><br/>Create Features"]:::featureEng
        C ~.-> D %% Mengindikasikan aliran data, tapi bukan proses sekuensial ketat dalam satu baris
    end

    subgraph "Phase 3: Modeling & Evaluation"
        direction LR
        F{"➗<br/><b>Data Splitting</b><br/>Train & Test"}:::splitting
        G["🧠<br/><b>Model Training</b><br/>Random Forest"]:::training
        H["✅<br/><b>Model Evaluation</b><br/>Metrics (MSE, R²)"]:::evaluation
        E ~.-> F
        F -- Training Data --> G
        G -.-> H %% Panah putus-putus untuk hasil model ke evaluasi
        F -- Test Data --> H
    end

    subgraph "Phase 4: Results & Interpretation"
        direction LR
        I["📊<br/><b>Visualization</b><br/>Charts & Plots"]:::visualization
        J["💡<br/><b>Analysis & Insights</b><br/>Interpretasi Hasil"]:::insights
        H ~.-> I --> J
    end

    %% ---- Menghubungkan Antar Subgraph ----
    %% Mermaid tidak secara eksplisit menghubungkan subgraph, tapi aliran node antar subgraph sudah jelas
    %% Jika perlu visualisasi panah antar 'phase', kita bisa pakai invisible node atau koneksi antar node ujungnya
    %% Untuk menjaga kesederhanaan, biarkan koneksi node C ke D, E ke F, H ke I yang menyebrangi subgraph

    %% Apply Link Styles (jika diinginkan untuk mempertegas)
    linkStyle default stroke:#555,stroke-width:2px;
    linkStyle 0 stroke-dasharray: 5 5; %% Contoh style untuk panah tertentu jika tahu indeksnya
